.benefits{color:#777}.benefits__content{margin-top:105px;padding-bottom:124px}.benefits__title{font:300 40px/47px "Roboto Condensed",sans-serif;color:#777;letter-spacing:.04em;text-transform:uppercase}.benefits__order,.benefits__skills{display:-webkit-box;display:-ms-flexbox;display:flex}.benefits__skills{margin-top:50px}.benefits__order{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.benefits__subtitle{font:300 18px/27px "Roboto",sans-serif;max-width:514px;margin-bottom:50px}.benefits__list,.benefits__list li{border-top:1px solid #d5d5d5;border-bottom:1px solid #d5d5d5}.benefits__list{margin-right:100px}.benefits__list li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:514px;padding:23px 0}.benefits__list li:last-child{padding:19px 0}.benefits__image{padding-right:10px}.benefits__link{font:300 20px/27px "Roboto Condensed",sans-serif;letter-spacing:.12em;text-transform:uppercase;color:#777;-webkit-transition:.2s ease;-o-transition:.2s ease;transition:.2s ease}.benefits__link:hover{font-size:21px}.portfolio{color:#777}.portfolio__title{font:300 40px/47px "Roboto Condensed",sans-serif;color:#777;letter-spacing:.08em;text-align:center;margin-bottom:50px}.portfolio__tabs{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-bottom:1px solid #d5d5d5}.portfolio__tabs li{position:relative;margin-left:40px}.portfolio__link{color:#777;font-size:14px;line-height:16px;text-align:center;letter-spacing:.09em;text-transform:uppercase;border-bottom:1px solid #d5d5d5}.portfolio__link:hover{color:#000;-webkit-transition:.1s ease;-o-transition:.1s ease;transition:.1s ease;border-bottom:2px solid #000}.portfolio__tabs span{position:absolute;top:-8px}.portfolio__gallery{margin-top:40px;margin-bottom:60px}.portfolio__button{font:400 14px/16px "Roboto Condensed",sans-serif;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#393246;padding:22px 54px;text-transform:uppercase;border:1px solid #000;margin-left:460px;margin-bottom:114px}.portfolio__button:hover{color:#fff;background:#000}.portfolio__links{padding-bottom:116px}.portfolio__button:hover,.portfolio__submit{-webkit-transition:.2s ease;-o-transition:.2s ease;transition:.2s ease}.portfolio__submit{font:300 40px/47px "Roboto Condensed",sans-serif;position:relative;text-transform:uppercase;color:#777;border-bottom:1px solid #d5d5d5;margin-left:230px;margin-bottom:116px}.portfolio__submit:hover{border-bottom:1px solid #000}.portfolio__submit svg{position:absolute;top:10px;margin-left:7.5px;-webkit-transition:all 1s ease-in-out;-o-transition:all 1s ease-in-out;transition:all 1s ease-in-out}.portfolio__submit svg:hover{translate:0,-50px}.gallery__items{display:grid;gap:30px;grid-template-columns:repeat(4,277px);grid-template-rows:repeat(4,277px);grid-template-areas:"pic1 pic2 pic3 pic4" "pic1 pic5 pic6 pic6" "pic7 pic7 pic6 pic6" "pic8 pic9 pic10 pic10"}.gallery__item{cursor:pointer;-webkit-transition:.2s;-o-transition:.2s;transition:.2s}.gallery__item:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.gallery__item:nth-child(1){grid-area:pic1}.gallery__item:nth-child(2){grid-area:pic2}.gallery__item:nth-child(3){grid-area:pic3}.gallery__item:nth-child(4){grid-area:pic4}.gallery__item:nth-child(5){grid-area:pic5}.gallery__item:nth-child(6){grid-area:pic6}.gallery__item:nth-child(7){grid-area:pic7}.gallery__item:nth-child(8){grid-area:pic8}.gallery__item:nth-child(9){grid-area:pic9}.gallery__item:nth-child(10){grid-area:pic10}.header{position:absolute;top:0;left:0;width:100%;z-index:1;height:105px;border-bottom:.5px solid #878787}.header__content{padding:30px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__content,.header__menu{display:-webkit-box;display:-ms-flexbox;display:flex}.header__link{margin:50px;text-transform:uppercase;color:#fff;font-size:14px}.header__link:hover{-webkit-transition:.2s ease;-o-transition:.2s ease;transition:.2s ease;color:#777}.header__contacts{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__contacts svg{margin-right:10px}.header__phone,.header__phone:hover{-webkit-transition:1s ease;-o-transition:1s ease;transition:1s ease}.header__phone{color:#fff}.header__phone:hover{font-size:15px}.footer{background:#f7f7f7;height:250px}.footer__content{padding-top:95px;text-align:center}.footer__link{color:#777;text-transform:uppercase;margin-left:30px}.footer__copyright{margin-top:30px;color:#878787}.firstscreen{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.6))),url(../../img/header/bg.png) top center no-repeat;background:-o-linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.6)),url(../../img/header/bg.png) top center no-repeat;background:linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.6)),url(../../img/header/bg.png) top center no-repeat;height:800px}.firstscreen::after{content:"";top:0;left:0;background:#000;opacity:.5}.firstscreen__order{width:100%}.firstscreen__title{font:300 140px/164px "Roboto Condensed",sans-serif;text-align:center;padding-top:265px}.firstscreen__subtitle{font:100 20px/27px "Roboto Condensed",sans-serif;text-align:center;letter-spacing:.06em;text-transform:uppercase}*,body{margin:0;padding:0}body{color:#fff;font-family:"Roboto Condensed",sans-serif;font-weight:lighter;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}a{text-decoration:none}li,ul{list-style:none}*{-webkit-box-sizing:border-box;box-sizing:border-box}.container{max-width:1200px;margin:0 auto;padding:0 10px}@supports (-webkit-appearance:none){.firstscreen{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.6))),url(../../img/header/bg.webp) top center no-repeat;background:-o-linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.6)),url(../../img/header/bg.webp) top center no-repeat;background:linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.6)),url(../../img/header/bg.webp) top center no-repeat}}@media (max-width:1024px){.benefits__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.benefits__title{text-align:center}.benefits__items,.benefits__skills{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.benefits__skills{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.benefits__items{margin-left:110px;margin-bottom:30px}.portfolio__button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:320px}.portfolio__submit{font-size:30px;border-bottom:none}.portfolio__submit svg{display:none}.gallery__items,.header__burger,.portfolio__submit{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.gallery__items{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header__burger{background:#000;position:absolute;right:5;top:5;width:40px;height:40px;border:0;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.header__burger .line,.header__burger .line::after,.header__burger .line::before{display:inline-block;background:#fff;height:4px}.header__burger .line::after,.header__burger .line::before{content:"";width:100%;position:absolute;left:0}.header__burger .line::before{top:10px}.header__burger .line::after{top:-10px}.header__burger .line{position:relative;width:80%}.footer__content .container{width:930px}.firstscreen::after{width:100%;margin-right:0}.firstscreen__title{font-size:130px}.firstscreen__subtitle{font-size:18px}.container{max-width:930px}}@media (max-width:768px){.gallery__items,.portfolio__button,.portfolio__submit{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.portfolio__button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;margin-left:200px}.gallery__items,.portfolio__submit{display:-webkit-box;display:-ms-flexbox;display:flex}.portfolio__submit{font-size:20px;border-bottom:none}.portfolio__submit svg{display:none}.gallery__items{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.container{max-width:678px}}@media (max-width:762px){.firstscreen__title{font-size:120px}.firstscreen__subtitle{font-size:16px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */